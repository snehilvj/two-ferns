{"version":3,"sources":["components/models/Armchair.js","components/ModelContainer.js","components/Description.js","components/Home.js","App.js","index.js"],"names":["state","proxy","current","items","pillow","chair","Picker","snap","useSnapshot","className","color","onChange","Armchair","props","group","useRef","useGLTF","nodes","materials","ref","dispose","onPointerDown","e","stopPropagation","object","material","name","startsWith","onPointerMissed","castShadow","receiveShadow","geometry","legs","base","material-color","material-name","cushion","preload","ModelContainer","Container","shadows","dpr","camera","position","fov","intensity","angle","penumbra","fallback","Html","scale","rotation","Environment","preset","OrbitControls","enablePan","enableZoom","minPolarAngle","Math","PI","maxPolarAngle","styled","div","Description","Logo","src","alt","BoldText","Text","HighlightText","img","h1","p","span","Home","App","reactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f3834ef.chunk.js","sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useState, useEffect } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { proxy, useSnapshot } from 'valtio'\nimport { HexColorPicker } from 'react-colorful'\n\nconst state = proxy({\n    current: null,\n    items: {\n        pillow: '#37372f',\n        chair: '#2f1f33',\n    },\n})\n\nexport function Picker() {\n    const snap = useSnapshot(state)\n    return (\n        <div>\n            <HexColorPicker\n                className='picker'\n                color={snap.items[snap.current]}\n                onChange={(color) => (state.items[snap.current] = color)}\n            />\n            <h1 className='part'>{snap.current}</h1>\n        </div>\n    )\n}\n\nexport default function Armchair(props) {\n    const group = useRef()\n    const snap = useSnapshot(state)\n\n    const { nodes, materials } = useGLTF('models/armchair.glb')\n\n    return (\n        <group\n            ref={group}\n            {...props}\n            dispose={null}\n            onPointerDown={(e) => {\n                e.stopPropagation()\n                if (e.object.material.name.startsWith('fabric')) {\n                    state.current = null\n                } else {\n                    state.current = e.object.material.name\n                }\n            }}\n            onPointerMissed={() => (state.current = null)}\n        >\n            <group>\n                <mesh\n                    castShadow\n                    receiveShadow\n                    geometry={nodes.legs.geometry}\n                    material={materials['fabric.002']}\n                />\n                <mesh\n                    castShadow\n                    receiveShadow\n                    geometry={nodes.base.geometry}\n                    material={nodes.base.material}\n                    material-color={snap.items.chair}\n                    material-name='chair'\n                />\n                <mesh\n                    castShadow\n                    receiveShadow\n                    geometry={nodes.chair.geometry}\n                    material={nodes.chair.material}\n                    material-color={snap.items.chair}\n                    material-name='chair'\n                />\n                <mesh\n                    castShadow\n                    receiveShadow\n                    geometry={nodes.cushion.geometry}\n                    material={nodes.cushion.material}\n                    material-color={snap.items.chair}\n                    material-name='chair'\n                />\n                <mesh\n                    castShadow\n                    receiveShadow\n                    geometry={nodes.pillow.geometry}\n                    material={materials['fabric.003']}\n                    material-color={snap.items.pillow}\n                    material-name='pillow'\n                />\n            </group>\n        </group>\n    )\n}\n\nuseGLTF.preload('models/armchair.glb')\n","import React, { Suspense } from 'react'\nimport Armchair, { Picker } from './models/Armchair'\nimport { Canvas } from '@react-three/fiber'\nimport styled from 'styled-components'\nimport { Environment, Html, OrbitControls } from '@react-three/drei'\n\nconst ModelContainer = () => {\n    return (\n        <Container>\n            <Canvas\n                shadows\n                dpr={[1, 2]}\n                camera={{ position: [0, 3, 4], fov: 50 }}\n            >\n                <ambientLight intensity={0.5} />\n                <spotLight\n                    intensity={0.5}\n                    angle={0.1}\n                    penumbra={1}\n                    position={[10, 15, 10]}\n                    castShadow\n                />\n                <Suspense\n                    fallback={\n                        <Html>\n                            <h1>loading...</h1>\n                        </Html>\n                    }\n                >\n                    <Armchair\n                        scale={2}\n                        rotation={[0, 0, 0]}\n                        position={[0, -1, 0]}\n                    />\n                    <Environment preset='city' />\n                </Suspense>\n                <OrbitControls\n                    enablePan={false}\n                    enableZoom={false}\n                    minPolarAngle={Math.PI / 2 - 0.2}\n                    maxPolarAngle={Math.PI / 2 + 0.2}\n                />\n            </Canvas>\n            <Picker />\n        </Container>\n    )\n}\n\nexport default ModelContainer\n\nconst Container = styled.div`\n    width: 100%;\n    height: calc(100vh - 140px);\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Description = () => {\n    return (\n        <Container>\n            <Logo src='images/logo.png' alt='logo' />\n            <BoldText>Customize your furniture like never before.</BoldText>\n            <Text>\n                Select from 100s of styles created by{' '}\n                <HighlightText>Award Winning</HighlightText> artists.\n            </Text>\n        </Container>\n    )\n}\n\nexport default Description\n\nconst Container = styled.div`\n    width: 70%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    height: calc(100vh - 140px);\n`\n\nconst Logo = styled.img`\n    width: 300px;\n`\n\nconst BoldText = styled.h1`\n    font-family: 'Inter', sans-serif;\n    font-size: 80px;\n    color: #e76f51;\n`\n\nconst Text = styled.p`\n    color: #264653;\n    font-size: 20px;\n`\n\nconst HighlightText = styled.span`\n    background: #e9c46a;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport ModelContainer from './ModelContainer'\nimport Description from './Description'\n// import Gallery from './Gallery'\n\nconst Home = () => {\n    return (\n        <Container>\n            <Description />\n            <ModelContainer />\n        </Container>\n    )\n}\n\nexport default Home\n\nconst Container = styled.div`\n    display: flex;\n    padding: 70px;\n`\n","import React from 'react'\n\nimport './index.css'\nimport Home from './components/Home'\n\nexport default function App() {\n    return <Home />\n}\n","import React from 'react'\nimport reactDom from 'react-dom'\nimport App from './App'\n\nreactDom.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}